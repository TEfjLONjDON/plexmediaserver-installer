#!/bin/bash

PMS_LIB_DIR=/usr/lib/plexmediaserver
PMS_DOWNLOAD_DIR=/tmp/plex_tmp_download	

get_pms_build(){

	local cpuinfo=$(grep -i features /proc/cpuinfo)
	local cpuarch=$(grep -i architecture /proc/cpuinfo | cut -d' ' -f3 | head -n1)

	local bios_board_vendor=""
	if [[ -e /sys/class/dmi/id/board_vendor ]]; then
		bios_board_vendor=$(cat /sys/class/dmi/id/board_vendor)
	elif [[ -e /sys/devices/virtual/dmi/id/board_vendor ]]; then
		bios_board_vendor=$(cat /sys/devices/virtual/dmi/id/board_vendor)
	fi

	if [[ $bios_board_vendor == "AMD" ]]; then
		echo "synology"
	elif [[ $cpuinfo =~ .*neon.* ]] && [[ $cpuinfo =~ .*vfpv4.* ]] && [[ $cpuinfo =~ .*thumb.* ]] && [[ $cpuinfo =~ .*idiva.* ]]; then
		echo "netgear"		
	elif [[ $cpuarch == "8" ]]; then
		echo "netgear"
	else
		echo "synology"
	fi
}

install_netgear(){

	local PMS_URL='https://downloads.plex.tv/plex-media-server/1.8.4.4249-3497d6779/plexmediaserver-ros6-binaries-annapurna_1.8.4.4249-3497d6779_armel.deb'
	local PMS_HASH='325cdb8789d1760bfe1828262680b5871080e80a5b350c95a46fde0b56f648de'

	echo "Downloading readynas package ..."
	cd $PMS_DOWNLOAD_DIR	
	curl --progress-bar -o readynas.deb $PMS_URL

	local PMS_DOWNLOAD_HASH=`sha256sum readynas.deb | cut -d' ' -f1`

	if [ "$PMS_HASH" != "$PMS_DOWNLOAD_HASH" ]
	then
		echo "Checksum mismatch. Downloaded file does not match this package."
		exit 1
	else
		echo "Passed checksum test."
	fi

	echo "Extracting readynas.deb ..."
        dpkg-deb --fsys-tarfile readynas.deb | tar -xf - -C $PMS_LIB_DIR/ --strip-components=4 ./apps/plexmediaserver-annapurna/Binaries

	# remove not used files
	rm $PMS_LIB_DIR/config.xml
	
}

install_synology(){

	local PMS_URL='https://downloads.plex.tv/plex-media-server/1.8.4.4249-3497d6779/PlexMediaServer-1.8.4.4249-3497d6779-arm7.spk'
	local PMS_HASH='51db5429dadafc8727e78cab435c908f57f39319b1f28cccb9b34ed4cc4134e7'

	echo "Downloading synology package ..."
	cd $PMS_DOWNLOAD_DIR	
	curl --progress-bar -o synology.tar $PMS_URL

	local PMS_DOWNLOAD_HASH=`sha256sum synology.tar | cut -d' ' -f1`

	if [ "$PMS_HASH" != "$PMS_DOWNLOAD_HASH" ]
	then
		echo "Checksum mismatch. Downloaded file does not match this package."
		exit 1
	else
		echo "Passed checksum test."
	fi

	echo "Extracting synology.tar ..."
        tar -xOf synology.tar package.tgz | tar -xzf - -C $PMS_LIB_DIR/

	# remove not used files
	rm -r $PMS_LIB_DIR/dsm_config
}


case "$1" in
    configure)
	adduser --quiet --system --shell /bin/bash --home /var/lib/plexmediaserver --group plex plex

	# create dirs 
	mkdir -p $PMS_DOWNLOAD_DIR	
	mkdir -p $PMS_LIB_DIR

	pmsbuild=$(get_pms_build)

	if [[ $pmsbuild == "netgear" ]]; then
		install_netgear
	else
		install_synology
	fi

	# remove tmp data
	cd /tmp
	rm -r $PMS_DOWNLOAD_DIR/

	# Ensure we load the udevrule and trigger for any already inserted USB device
	if [ -f /sbin/udevadm ]; then
	  udevadm control --reload-rules || :
	  udevadm trigger
	else
	  echo
	  echo "##################################################################"
	  echo "#  NOTE: Your system does not have udev installed. Without udev  #"
	  echo "#        you won't be able to use DVBLogic's TVButler for DVR    #"
	  echo "#        or for LiveTV                                           #"
	  echo "#                                                                #"
	  echo "#        Please install udev and reinstall Plex Media Server to  #"
	  echo "#        to enable TV Butler support in Plex Media Server.       #"
	  echo "#                                                                #"
	  echo "#        To install udev run: sudo apt-get install udev          #"
	  echo "#                                                                #"
	  echo "##################################################################"
	  echo
	fi

	if [ -f /proc/1/comm ]; then
	  if [ "`cat /proc/1/comm`" = "systemd" ]; then
	    rm -f /etc/init.d/plexmediaserver
	    # Initiate config consolidation and pull overrides into the correct location.
	    if [ ! -f /usr/lib/plexmediaserver/.migrated ]; then
	      /usr/lib/plexmediaserver/MigratePlexServerConfig.sh
	      # Add migrated check file
	      touch /usr/lib/plexmediaserver/.migrated
	    fi
	    systemctl enable plexmediaserver
	    systemctl start plexmediaserver
	  else
	    update-rc.d plexmediaserver defaults
	    /etc/init.d/plexmediaserver start
	  fi
	fi
    ;;

    abort-upgrade|abort-remove|abort-deconfigure)
    ;;

    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

exit 0
